# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="bcBcue[kGTqqNbdS_4cbTG_PA3aIk]TPSCWgk2/QL9qyJ[Ul0uJ9oZX8=U[FkmM>"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=

db.playjpa.driver=com.mysql.jdbc.Driver
db.playjpa.url="jdbc:mysql://localhost:3306/playjpa"
db.playjpa.user=jerry
db.playjpa.password=jerry

db.playjpa.jndiName=playjpaDS
playjpa.name=playjpa
jpa.playjpa=playjpaPersistenceUnit

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled


# Play Akka Configuration
# http://www.jamesward.com/
play {
    akka {
        actor {
            deployment {
                /actions {
                    router = round-robin
                    nr-of-instances = 100
                }
                /promises {
                    router = round-robin
                    nr-of-instances = 100
                }
            }

            retrieveBodyParserTimeout = 5 seconds

            actions-dispatcher = {
                fork-join-executor {
                    parallelism-factor = 100
                    parallelism-max = 100
                }
            }
            promises-dispatcher = {
                fork-join-executor {
                    parallelism-factor = 100
                    parallelism-max = 100
                }
            }
        }
    }
}

# Akka JPA Dispatcher - Chapter 5.9 Dispachers Scala (Akka Documentation PDF Release 2.1 Page 227)
# allow supervisor to use fork-join-executor to forward messages
akkajpa-supervisor-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
	type = Dispatcher

    ##mailbox-type=akka.actor.mailbox.FileBasedMailboxType

    # What kind of ExecutionService to use
	executor = "fork-join-executor"

    # Configuration for the fork join pool
	fork-join-executor {
	    # Min number of threads to cap factor-based parallelism number to
		parallelism-min = 2

		# Parallelism (threads) ... ceil(available processors * factor)
		parallelism-factor = 2.0

        # Max number of threads to cap factor-based parallelism number to
		parallelism-max = 10
	}

	# Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
	throughput = 10
}
# use PinnedDispatcher with 1 thread per actor only
akkajpa-dispatcher {
    # PinnedDispatcher dedicates a unique thread for each actor using it; i.e. each actor will have its own thread pool with only one thread in the pool.
    type = PinnedDispatcher
    ##mailbox-type=akka.actor.mailbox.FileBasedMailboxType
    executor = "thread-pool-executor"
}

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

